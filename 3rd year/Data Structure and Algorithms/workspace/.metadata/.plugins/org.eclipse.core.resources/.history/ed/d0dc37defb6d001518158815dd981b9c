import java.util.ArrayList;

public class ParseTree extends MyTree<Object> {// k-ary tree

	public ParseTree() {
		super(2);
	}

	public void deleteSubtreeFrom(int index) {
		for (int j = 0; j < this.k; j++) {
			int childIndex = childIndex(index, j);
			if (get(childIndex) != null)
				deleteSubtreeFrom(childIndex);
		}

		set(index, null);

	}

	public void calculating(int i) {
		for (int j = 0; j < 2; j++) {
			int child = childIndex(i, j);
			if (get(child) != null)
				calculating(child);
		}

		int result=0;
		switch ((String) get(i)) {
		case "+":
			result=(int) get(childIndex(i, 0)) + (int) get(childIndex(i, 1));
			break;
		case "-":
			result=((int) get(childIndex(i, 0)) - (int) get(childIndex(i, 1)));
			break;
		case "*":
			result=((int) get(childIndex(i, 0)) * (int) get(childIndex(i, 1)));
			break;

		}
		
		deleteSubtreeFrom(i);
		set(i, (Object)result);
		

		System.out.println(get(i).toString());
		this.postorderTraversal(0);
		System.out.println();
		

	}

}
